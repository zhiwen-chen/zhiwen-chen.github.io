<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>紫印罗兰的博客</title>
  
  <subtitle>The blog of Vseal</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.vseal.cn/"/>
  <updated>2020-02-16T05:51:48.523Z</updated>
  <id>https://blog.vseal.cn/</id>
  
  <author>
    <name>紫印罗兰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>集合的创建与使用</title>
    <link href="https://blog.vseal.cn/posts/ed7756fd.html"/>
    <id>https://blog.vseal.cn/posts/ed7756fd.html</id>
    <published>2020-02-16T05:50:23.000Z</published>
    <updated>2020-02-16T05:51:48.523Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务4-8-用户注册与登录模拟&quot;&gt;&lt;a href=&quot;#任务4-8-用户注册与登录模拟&quot; class=&quot;headerlink&quot; title=&quot;任务4-8 用户注册与登录模拟&quot;&gt;&lt;/a&gt;任务4-8 用户注册与登录模拟&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;用字典预先存放一些用户的用户名和密码。用菜单形式提供登录和注册操作。如果是登录，用户输入用户名和密码后，在字典中查找，并比较是否正确。如果正确，允许登录；否则，给出错误信息；连续错误三次，退出程序。如果是注册，用户输入注册所需信息，并检测用户名是否存在。如果存在，要求用户修改，直到没有重名。最后，把新用户的用户名和密码添加到字典中。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="集合的创建与使用" scheme="https://blog.vseal.cn/tags/%E9%9B%86%E5%90%88%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    
      <category term="集合" scheme="https://blog.vseal.cn/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>管理字典</title>
    <link href="https://blog.vseal.cn/posts/fa961642.html"/>
    <id>https://blog.vseal.cn/posts/fa961642.html</id>
    <published>2020-02-14T13:43:36.000Z</published>
    <updated>2020-02-14T13:44:21.503Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务4-7-字符个数统计&quot;&gt;&lt;a href=&quot;#任务4-7-字符个数统计&quot; class=&quot;headerlink&quot; title=&quot;任务4-7 字符个数统计&quot;&gt;&lt;/a&gt;任务4-7 字符个数统计&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;新建一个字典对象，存放字符和出现次数键值对。遍历字符串中的每一个字符，如果第一次出现，则添加进字典，出现次数置为1；否者该字符的出现次数加1.最后输出结果。&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;cmp(dict1, dict2)&lt;br&gt;比较两个字典元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;len(dict)&lt;br&gt;计算字典元素个数，即键的总数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;str(dict)&lt;br&gt;输出字典可打印的字符串表示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;type(variable)&lt;br&gt;返回输入的变量类型，如果变量是字典就返回字典类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.clear()&lt;br&gt;删除字典内所有元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.copy()&lt;br&gt;返回一个字典的浅复制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.fromkeys(seq[, val])&lt;br&gt;创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.get(key, default=None)&lt;br&gt;返回指定键的值，如果值不在字典中返回default值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.has_key(key)&lt;br&gt;如果键在字典dict里返回true，否则返回false&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.items()&lt;br&gt;以列表返回可遍历的(键, 值) 元组数组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.keys()&lt;br&gt;以列表返回一个字典所有的键&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.values()&lt;br&gt;以列表返回字典中的所有值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.setdefault(key, default=None)&lt;br&gt;和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;dict.update(dict2)&lt;br&gt;把字典dict2的键/值对更新到dict里&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pop(key[,default])&lt;br&gt;删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;popitem()&lt;br&gt;随机返回并删除字典中的一对键和值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="字典" scheme="https://blog.vseal.cn/tags/%E5%AD%97%E5%85%B8/"/>
    
      <category term="管理字典" scheme="https://blog.vseal.cn/tags/%E7%AE%A1%E7%90%86%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>字典</title>
    <link href="https://blog.vseal.cn/posts/730cec53.html"/>
    <id>https://blog.vseal.cn/posts/730cec53.html</id>
    <published>2020-01-16T14:39:52.000Z</published>
    <updated>2020-01-16T14:41:09.925Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务4-6-扑克游戏发牌模拟&quot;&gt;&lt;a href=&quot;#任务4-6-扑克游戏发牌模拟&quot; class=&quot;headerlink&quot; title=&quot;任务4-6 扑克游戏发牌模拟&quot;&gt;&lt;/a&gt;任务4-6 扑克游戏发牌模拟&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;由于扑克牌的牌面是固定的，由13个数字和4种花色组成，因此可以使用元组来完成任务。首先定义2个元组分别存放13个数字和4种花色，然后组合成具有52张牌的元组；接着，采用随机数把牌打乱，分给4个人；最后，输出结果&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注微信公众号“&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;”，回复&lt;strong&gt;37py4-6&lt;/strong&gt;即可获取。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="字典" scheme="https://blog.vseal.cn/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>元组</title>
    <link href="https://blog.vseal.cn/posts/30e8fbca.html"/>
    <id>https://blog.vseal.cn/posts/30e8fbca.html</id>
    <published>2020-01-14T10:33:30.000Z</published>
    <updated>2020-01-14T10:34:20.973Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上篇回顾&quot;&gt;&lt;a href=&quot;#上篇回顾&quot; class=&quot;headerlink&quot; title=&quot;上篇回顾&quot;&gt;&lt;/a&gt;上篇回顾&lt;/h2&gt;&lt;h5 id=&quot;任务4-5-约塞夫环问题&quot;&gt;&lt;a href=&quot;#任务4-5-约塞夫环问题&quot; class=&quot;headerlink&quot; title=&quot;任务4-5 约塞夫环问题&quot;&gt;&lt;/a&gt;任务4-5 约塞夫环问题&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;用队列实现，就是将n个人构成一个队列，从队头开始报数。队头的人若报m，则移除队列；不是，则出队再入队（模拟圆环），等待下次到达队头位置。&lt;/li&gt;
&lt;li&gt;演示源码:&lt;br&gt;关注博客”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复&lt;strong&gt;37py4-5&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;p&gt;元组与列表类似，都是&lt;strong&gt;有序序列&lt;/strong&gt;，但是&lt;strong&gt;元组只读不写&lt;/strong&gt;。没有append()、extend()和insert()方法。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="列表" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8/"/>
    
      <category term="元组" scheme="https://blog.vseal.cn/tags/%E5%85%83%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>列表实现队列</title>
    <link href="https://blog.vseal.cn/posts/1b0b250e.html"/>
    <id>https://blog.vseal.cn/posts/1b0b250e.html</id>
    <published>2020-01-10T11:58:28.000Z</published>
    <updated>2020-01-10T12:02:27.158Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务4-4-表达式括号匹配&quot;&gt;&lt;a href=&quot;#任务4-4-表达式括号匹配&quot; class=&quot;headerlink&quot; title=&quot;任务4-4 表达式括号匹配&quot;&gt;&lt;/a&gt;任务4-4 表达式括号匹配&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;字符串形式接收来自键盘接收一个带括号的任意表达式，通过堆栈来解决括号匹配问题。如果遇到左括号，则入栈；如果遇见右括号，则出栈；如果字符串遍历结束后，栈刚好为空，说明匹配成功；否者；则不匹配。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复&lt;strong&gt;37py4-4&lt;/strong&gt;即可获取。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="列表" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8/"/>
    
      <category term="队列" scheme="https://blog.vseal.cn/tags/%E9%98%9F%E5%88%97/"/>
    
      <category term="列表实现队列" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>列表实现堆栈</title>
    <link href="https://blog.vseal.cn/posts/29a1321.html"/>
    <id>https://blog.vseal.cn/posts/29a1321.html</id>
    <published>2020-01-09T12:50:21.000Z</published>
    <updated>2020-01-09T12:52:55.919Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务4-3-输出九九乘法表&quot;&gt;&lt;a href=&quot;#任务4-3-输出九九乘法表&quot; class=&quot;headerlink&quot; title=&quot;任务4-3 输出九九乘法表&quot;&gt;&lt;/a&gt;任务4-3 输出九九乘法表&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据要求，设计具有两个变量的列表解析语句。变量x用于控制乘号左边的数字，变量y用来控制乘号右边的数字。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复&lt;strong&gt;37py4-3&lt;/strong&gt; 即可获取~&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;两种办法模拟堆栈&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;用insert()和pop()方法模拟堆栈&lt;/p&gt;
&lt;p&gt;特点：表头入栈和出栈&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;S=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S.insert(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#表头入栈(插入)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S.insert(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S.insert(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(S) &lt;span class=&quot;comment&quot;&gt;#输出结果为：[&#39;c&#39;,&#39;b&#39;,&#39;a&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(S.pop(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;#表头出栈，输出c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(S.pop(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;#输出b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用append()和pop()模拟堆栈&lt;/p&gt;
&lt;p&gt;特点：表尾入栈和出栈&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;S=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S.append(&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#表尾添加一个a，入栈&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S.append(&lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S.append(&lt;span class=&quot;string&quot;&gt;&#39;c&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(S)&lt;span class=&quot;comment&quot;&gt;#结果[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(S)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(S.pop())&lt;span class=&quot;comment&quot;&gt;#最后一个位置出栈，输出c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(S.pop())&lt;span class=&quot;comment&quot;&gt;#输出b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="列表" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8/"/>
    
      <category term="堆栈" scheme="https://blog.vseal.cn/tags/%E5%A0%86%E6%A0%88/"/>
    
      <category term="列表实现堆栈" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8%E5%AE%9E%E7%8E%B0%E5%A0%86%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>列表解析</title>
    <link href="https://blog.vseal.cn/posts/3975875.html"/>
    <id>https://blog.vseal.cn/posts/3975875.html</id>
    <published>2020-01-08T04:52:06.000Z</published>
    <updated>2020-01-08T04:53:03.184Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务4-1-学生成绩统计&quot;&gt;&lt;a href=&quot;#任务4-1-学生成绩统计&quot; class=&quot;headerlink&quot; title=&quot;任务4-1 学生成绩统计&quot;&gt;&lt;/a&gt;任务4-1 学生成绩统计&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据题意，需要设计一个学生成绩列表。其中，列表的每一项表示一个学生的成绩信息；每个学生的成绩信息也是一个列表，由6项组成，分别是学号、姓名、语文成绩、数学成绩、英语成绩和综合成绩；还需要增加两项，分别是总成绩和平均成绩，通过计算获得。学生列表创建完成后，根据统计要求，分别创建各科成绩和平均成绩的列表，然后在这些新创建的列表中进行各项统计。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复”37py4-1”即可获取。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="列表" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8/"/>
    
      <category term="列表的解析" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8%E7%9A%84%E8%A7%A3%E6%9E%90/"/>
    
      <category term="列表解析" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>列表的创建</title>
    <link href="https://blog.vseal.cn/posts/47808459.html"/>
    <id>https://blog.vseal.cn/posts/47808459.html</id>
    <published>2020-01-07T04:54:51.000Z</published>
    <updated>2020-01-07T04:56:11.315Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;列表的特点：通过一个变量存储多个数据值，且数据类型可以不同。另外，列表可以修改，如添加或删除列表的元素。&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;列表的创建&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;列表举例：[5,10,4,5,2] [‘Monday’,’Month’,’Year’] [2014,’年]&lt;/li&gt;
&lt;li&gt;空列表:[]&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;遍历列表元素&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用in操作符遍历。&lt;/li&gt;
&lt;li&gt;使用range()函数。&lt;/li&gt;
&lt;li&gt;使用iter()函数，它是一个迭代器函数。&lt;/li&gt;
&lt;li&gt;使用enumerate()函数遍历。该函数用于遍历序列中的元素及其下标。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="列表" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8/"/>
    
      <category term="列表的创建" scheme="https://blog.vseal.cn/tags/%E5%88%97%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>pass语句</title>
    <link href="https://blog.vseal.cn/posts/a36bb514.html"/>
    <id>https://blog.vseal.cn/posts/a36bb514.html</id>
    <published>2020-01-06T04:54:06.000Z</published>
    <updated>2020-01-06T04:54:44.751Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-18-创建扑克牌&quot;&gt;&lt;a href=&quot;#任务3-18-创建扑克牌&quot; class=&quot;headerlink&quot; title=&quot;任务3-18 创建扑克牌&quot;&gt;&lt;/a&gt;任务3-18 创建扑克牌&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据题意，需要使用2个字符串列表来分别存放13张牌和4个花色。因为每个花色都要配13张牌，因此需要设计一个二重循环结构来完成。外层循环控制4个花色，遍历列表中的每一个花色，直到4个花色全部访问到。内层循环控制13张牌。在外层循环的每一次迭代中，内层循环都要执行一遍。在循环体中输出所有的牌面。&lt;h5 id=&quot;任务3-19-字符串逆序输出&quot;&gt;&lt;a href=&quot;#任务3-19-字符串逆序输出&quot; class=&quot;headerlink&quot; title=&quot;任务3-19 字符串逆序输出&quot;&gt;&lt;/a&gt;任务3-19 字符串逆序输出&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;设计思路：&lt;br&gt;需要使用循环结构来遍历每个字符。在遍历过程中，依次把每次遍历的字符插入结果字符串的前面，最后输出结果字符串。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="pass语句" scheme="https://blog.vseal.cn/tags/pass%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>字符串的遍历循环</title>
    <link href="https://blog.vseal.cn/posts/90d64ac8.html"/>
    <id>https://blog.vseal.cn/posts/90d64ac8.html</id>
    <published>2020-01-05T15:10:37.000Z</published>
    <updated>2020-01-05T15:14:41.763Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-16-输出九九乘法表&quot;&gt;&lt;a href=&quot;#任务3-16-输出九九乘法表&quot; class=&quot;headerlink&quot; title=&quot;任务3-16 输出九九乘法表&quot;&gt;&lt;/a&gt;任务3-16 输出九九乘法表&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;需要用双重循环结构来完成。其中，外层循环控制输出的行数，内层循环控制每行输出的列数。循环体内输出乘法表。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复”&lt;strong&gt;37py3-16&lt;/strong&gt;“。&lt;h5 id=&quot;任务3-17-输出水仙花数&quot;&gt;&lt;a href=&quot;#任务3-17-输出水仙花数&quot; class=&quot;headerlink&quot; title=&quot;任务3-17 输出水仙花数&quot;&gt;&lt;/a&gt;任务3-17 输出水仙花数&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;设计思路：&lt;br&gt;用一个三重循环来表示3位数。其中，外层循环表示百位，第二层循环表示十位，最内层循环表示各位。在循环体内把三层循环体结构所表示的数字组合成一个3位数，判断后输出结果。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复”&lt;strong&gt;37py3-17&lt;/strong&gt;“。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="字符串的遍历循环" scheme="https://blog.vseal.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%81%8D%E5%8E%86%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>嵌套</title>
    <link href="https://blog.vseal.cn/posts/9ad1f975.html"/>
    <id>https://blog.vseal.cn/posts/9ad1f975.html</id>
    <published>2020-01-04T05:24:44.000Z</published>
    <updated>2020-01-04T05:25:31.810Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-15-输出素数&quot;&gt;&lt;a href=&quot;#任务3-15-输出素数&quot; class=&quot;headerlink&quot; title=&quot;任务3-15 输出素数&quot;&gt;&lt;/a&gt;任务3-15 输出素数&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;素数的判断规则同任务3-12，不同的是在for循环中使用else语句，从而不需要标记变量。&lt;/li&gt;
&lt;li&gt;示例程序&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复&lt;strong&gt;37py3-15&lt;/strong&gt;即可获取。&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;p&gt;循环结构的循环体内可以包含任意Python的语句，因此也可以包含另外的循环结构。其中，最外层的循环称为外循环，包含的循环称为内循环；内循环必须完全包含在外循环中。并且外循环和内循环的控制变量不能相同。在嵌套循环结构中，嵌套的层数可以是任意的。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="嵌套" scheme="https://blog.vseal.cn/tags/%E5%B5%8C%E5%A5%97/"/>
    
  </entry>
  
  <entry>
    <title>循环中的else语句</title>
    <link href="https://blog.vseal.cn/posts/48480d59.html"/>
    <id>https://blog.vseal.cn/posts/48480d59.html</id>
    <published>2020-01-02T00:21:05.000Z</published>
    <updated>2020-01-02T00:22:05.054Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-12-素数判断&quot;&gt;&lt;a href=&quot;#任务3-12-素数判断&quot; class=&quot;headerlink&quot; title=&quot;任务3-12 素数判断&quot;&gt;&lt;/a&gt;任务3-12 素数判断&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据素数的判断规则可知，对于一个整数num，如果num与2~nnum-1的任何数都没有整除关系，则num就是一个素数。因此，需要生成一个2~num-1的序列，然后利用for循环，依次把从序列中获得的数值与num通过取余运算来进行整除关系的判断。另外，需要设计一个标记变量flag来指示是否出现过整除的情况。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复&lt;strong&gt;37py3-12&lt;/strong&gt;即可获取。&lt;h5 id=&quot;任务3-13-用户登录模拟&quot;&gt;&lt;a href=&quot;#任务3-13-用户登录模拟&quot; class=&quot;headerlink&quot; title=&quot;任务3-13 用户登录模拟&quot;&gt;&lt;/a&gt;任务3-13 用户登录模拟&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;设计思路：&lt;br&gt;首先使用变量预先存放用户名和密码，然后设计最多执行3次的循环结构。在循环体中要求用户输入用户名密码，并判断输入是否正确。如果输入3次都不正确，打印提示信息，不允许再次登陆。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复&lt;strong&gt;37py3-13&lt;/strong&gt;即可获取。&lt;h5 id=&quot;任务3-14-数值计算&quot;&gt;&lt;a href=&quot;#任务3-14-数值计算&quot; class=&quot;headerlink&quot; title=&quot;任务3-14 数值计算&quot;&gt;&lt;/a&gt;任务3-14 数值计算&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;设计思路：&lt;br&gt;构造一个100~300的序列，用for循环逐一检测，并输出符合条件的数据。在此使用continue语句。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“，回复&lt;strong&gt;37py3-14&lt;/strong&gt;即可获取。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="循环中的else语句" scheme="https://blog.vseal.cn/tags/%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%9A%84else%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>break和continue</title>
    <link href="https://blog.vseal.cn/posts/1bc7f3c9.html"/>
    <id>https://blog.vseal.cn/posts/1bc7f3c9.html</id>
    <published>2020-01-01T14:42:02.000Z</published>
    <updated>2020-01-01T14:44:44.901Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-11-计算分数之和&quot;&gt;&lt;a href=&quot;#任务3-11-计算分数之和&quot; class=&quot;headerlink&quot; title=&quot;任务3-11 计算分数之和&quot;&gt;&lt;/a&gt;任务3-11 计算分数之和&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据之前公式可知，这是一个分数的连续相加问题，且每项的分母是一个奇数。首先，需要生成一个1~2Xn+1的奇数序列；然后，利用for循环，依次把从序列中获得的数值进行累加运算。另外，为累加器变量的初值赋0。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“回复&lt;strong&gt;37py3-11&lt;/strong&gt;即可获取~&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="break和continue" scheme="https://blog.vseal.cn/tags/break%E5%92%8Ccontinue/"/>
    
  </entry>
  
  <entry>
    <title>for循环语句</title>
    <link href="https://blog.vseal.cn/posts/7fad9216.html"/>
    <id>https://blog.vseal.cn/posts/7fad9216.html</id>
    <published>2019-12-30T15:32:50.000Z</published>
    <updated>2019-12-30T15:33:31.228Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-7-自然数求和&quot;&gt;&lt;a href=&quot;#任务3-7-自然数求和&quot; class=&quot;headerlink&quot; title=&quot;任务3-7 自然数求和&quot;&gt;&lt;/a&gt;任务3-7 自然数求和&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;一个变量存储循环控制变量，另外一个存储和的累加器；循环变量用i表示，则循环的3个要素：i=2;i&amp;lt;1000;i+=2，生成1000内的所有的偶数。每执行一次，生成一个新的偶数。累加器s须初始化为0.循环体是一条累加语句s+=i。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注微信公众号”blog_vseal_cn”回复37py3-7即可查看&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="for循环语句" scheme="https://blog.vseal.cn/tags/for%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>while循环</title>
    <link href="https://blog.vseal.cn/posts/54c85bed.html"/>
    <id>https://blog.vseal.cn/posts/54c85bed.html</id>
    <published>2019-12-28T05:02:23.000Z</published>
    <updated>2019-12-28T05:03:24.221Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-6-简单的计算器&quot;&gt;&lt;a href=&quot;#任务3-6-简单的计算器&quot; class=&quot;headerlink&quot; title=&quot;任务3-6 简单的计算器&quot;&gt;&lt;/a&gt;任务3-6 简单的计算器&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据题目要求，用一个字符串接收一个运算式(计算式)，需要用正则分解出两个操作数和一个运算符，再使用字典方式构造多分支结构，计算结果并输出。&lt;/li&gt;
&lt;li&gt;示例程序&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“回复37py3-6即可获取&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;循环语法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[初始化语句]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while (循环条件):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[迭代语句]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果循环条件不成立，那么循环一次都不会执行&lt;/li&gt;
&lt;li&gt;如果迭代语句使得循环条件一直满足，那么就会&lt;strong&gt;死循环&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;但是有时候需要循环条件一直为True，不如GUI程序界面控制等。&lt;/li&gt;
&lt;li&gt;如果执行语句只有一条，那么可以跟着while冒号:后面&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="while循环" scheme="https://blog.vseal.cn/tags/while%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>switch语句的替换方案</title>
    <link href="https://blog.vseal.cn/posts/b0905f23.html"/>
    <id>https://blog.vseal.cn/posts/b0905f23.html</id>
    <published>2019-12-26T15:51:26.000Z</published>
    <updated>2019-12-26T15:52:11.429Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;任务3-5-判断三角形的类型&quot;&gt;&lt;a href=&quot;#任务3-5-判断三角形的类型&quot; class=&quot;headerlink&quot; title=&quot;任务3-5 判断三角形的类型&quot;&gt;&lt;/a&gt;任务3-5 判断三角形的类型&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;键入3条边长，根据边长关系，首先确定是个三角形，再根据勾股定理各两边平方和与第三条边的平方和关系，确定直角三角形，再锐角三角形，else钝角三角形。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注公众号’&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;‘，回复37py3-5即可查看。&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;C语言或Java都支持switch语句，但是Python没有switch关键字，然后很多时候需要switch，那怎么办，推荐查看后面的&lt;strong&gt;字典章节&lt;/strong&gt;，再完成下面任务。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="switch语句的替换方案" scheme="https://blog.vseal.cn/tags/switch%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%9B%BF%E6%8D%A2%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>if语句的嵌套</title>
    <link href="https://blog.vseal.cn/posts/f2e4349a.html"/>
    <id>https://blog.vseal.cn/posts/f2e4349a.html</id>
    <published>2019-12-21T15:40:03.000Z</published>
    <updated>2019-12-21T15:41:19.462Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;任务3-4-成绩分等&quot;&gt;&lt;a href=&quot;#任务3-4-成绩分等&quot; class=&quot;headerlink&quot; title=&quot;任务3-4 成绩分等&quot;&gt;&lt;/a&gt;任务3-4 成绩分等&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;键盘输入数据，然后用if-elif-else判断成绩是否有效。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注微信公众号”hut-fsd“，回复37py3-4即可获取&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;ul&gt;
&lt;li&gt;嵌套的基本格式：&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; 条件语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; 条件语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		执行语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		执行语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	执行语句&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;执行判断过程：&lt;/strong&gt;条件语句1 -&amp;gt;条件语句2 -&amp;gt;else 或 条件语句1 -&amp;gt; else:&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="if语句的嵌套" scheme="https://blog.vseal.cn/tags/if%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%B5%8C%E5%A5%97/"/>
    
  </entry>
  
  <entry>
    <title>if-elif-else判断语句</title>
    <link href="https://blog.vseal.cn/posts/25d1e216.html"/>
    <id>https://blog.vseal.cn/posts/25d1e216.html</id>
    <published>2019-11-22T15:41:42.000Z</published>
    <updated>2019-11-22T15:43:37.234Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-2-输出最大的数&quot;&gt;&lt;a href=&quot;#任务3-2-输出最大的数&quot; class=&quot;headerlink&quot; title=&quot;任务3-2 输出最大的数&quot;&gt;&lt;/a&gt;任务3-2 输出最大的数&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设计思路：&lt;br&gt;分别定义3个变量来存放3个数。假如第一个变量是最大值，分别与第二个数和第三个数进行比较。如果发现逆序，则修改，最后输出答案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例程序：&lt;br&gt;关注微信公众号”&lt;strong&gt;hut-fsd&lt;/strong&gt;“，回复&lt;strong&gt;37py3-2&lt;/strong&gt;即可获取&lt;/p&gt;
&lt;h5 id=&quot;任务3-3-计算一元二次方程的根&quot;&gt;&lt;a href=&quot;#任务3-3-计算一元二次方程的根&quot; class=&quot;headerlink&quot; title=&quot;任务3-3 计算一元二次方程的根&quot;&gt;&lt;/a&gt;任务3-3 计算一元二次方程的根&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计思路：&lt;br&gt;根据公式$$x=\frac{-b\pm \sqrt{b^{2}-4ac}}{2a}$$可知需要3个输入量，a、b、c以及2个输出量保存方程的两根。当然需要注意a不能为0，平方根内值得必须大于等于0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例程序：&lt;br&gt;关注微信公众号”&lt;strong&gt;hut-fsd&lt;/strong&gt;“，回复&lt;strong&gt;37py3-3&lt;/strong&gt;即可获取&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="if-elif-else" scheme="https://blog.vseal.cn/tags/if-elif-else/"/>
    
  </entry>
  
  <entry>
    <title>Python 选择结构之if-else</title>
    <link href="https://blog.vseal.cn/posts/59920642.html"/>
    <id>https://blog.vseal.cn/posts/59920642.html</id>
    <published>2019-11-20T14:45:34.000Z</published>
    <updated>2019-11-20T14:46:58.250Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上篇回顾上篇回顾&quot;&gt;&lt;a href=&quot;#上篇回顾上篇回顾&quot; class=&quot;headerlink&quot; title=&quot;上篇回顾上篇回顾&quot;&gt;&lt;/a&gt;上篇回顾上篇回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-1-计算椭球的表面积和体积&quot;&gt;&lt;a href=&quot;#任务3-1-计算椭球的表面积和体积&quot; class=&quot;headerlink&quot; title=&quot;任务3-1 计算椭球的表面积和体积&quot;&gt;&lt;/a&gt;任务3-1 计算椭球的表面积和体积&lt;/h5&gt;&lt;p&gt;设计思路：根据椭球在xyz笛卡尔坐标系里面的方程：$$\frac{x^{2}}{a}+\frac{y^{2}}{b}+\frac{z^{2}}{c}=1$$。椭球体表面积公式：$$S=\frac{4}{3}ab\pi$$，再根据椭球体的体积公式：$$V=\frac{4}{3} \pi abc$$。设置输入的a、b、c，输出S和V即可。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="if-else" scheme="https://blog.vseal.cn/tags/if-else/"/>
    
  </entry>
  
  <entry>
    <title>Python流程控制之顺序结构</title>
    <link href="https://blog.vseal.cn/posts/58ca4ef9.html"/>
    <id>https://blog.vseal.cn/posts/58ca4ef9.html</id>
    <published>2019-11-19T13:53:17.000Z</published>
    <updated>2019-11-19T13:54:38.301Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上篇回顾&quot;&gt;&lt;a href=&quot;#上篇回顾&quot; class=&quot;headerlink&quot; title=&quot;上篇回顾&quot;&gt;&lt;/a&gt;上篇回顾&lt;/h2&gt;&lt;h5 id=&quot;任务2-9-计算汽车贷款&quot;&gt;&lt;a href=&quot;#任务2-9-计算汽车贷款&quot; class=&quot;headerlink&quot; title=&quot;任务2-9 计算汽车贷款&quot;&gt;&lt;/a&gt;任务2-9 计算汽车贷款&lt;/h5&gt;&lt;p&gt;设计思路：根据之前所讲的math模块，自行推出计算式，然后求解。&lt;br&gt;演示源码：关注微信公众号”&lt;strong&gt;hut-fsd&lt;/strong&gt;“，回复&lt;strong&gt;37py2-9&lt;/strong&gt;即可查看~&lt;/p&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;p&gt;从这里开始我们步入第三章-Python流程控制，本节主讲顺序结构。&lt;/p&gt;&lt;p&gt;顺序结构：按照语句的先后顺序执行，每条语句只执行一次，简单吧，这个之前内容中已经实现了很多次咯，如果有所迷糊，看看之前的内容吧。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程控制" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    
      <category term="Python顺序结构" scheme="https://blog.vseal.cn/tags/Python%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/"/>
    
      <category term="顺序结构" scheme="https://blog.vseal.cn/tags/%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
