<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>紫印罗兰的博客</title>
  
  <subtitle>The blog of Vseal</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.vseal.cn/"/>
  <updated>2020-01-01T14:44:44.901Z</updated>
  <id>https://blog.vseal.cn/</id>
  
  <author>
    <name>紫印罗兰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>break和continue</title>
    <link href="https://blog.vseal.cn/posts/1bc7f3c9.html"/>
    <id>https://blog.vseal.cn/posts/1bc7f3c9.html</id>
    <published>2020-01-01T14:42:02.000Z</published>
    <updated>2020-01-01T14:44:44.901Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-11-计算分数之和&quot;&gt;&lt;a href=&quot;#任务3-11-计算分数之和&quot; class=&quot;headerlink&quot; title=&quot;任务3-11 计算分数之和&quot;&gt;&lt;/a&gt;任务3-11 计算分数之和&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据之前公式可知，这是一个分数的连续相加问题，且每项的分母是一个奇数。首先，需要生成一个1~2Xn+1的奇数序列；然后，利用for循环，依次把从序列中获得的数值进行累加运算。另外，为累加器变量的初值赋0。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“回复&lt;strong&gt;37py3-11&lt;/strong&gt;即可获取~&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="break和continue" scheme="https://blog.vseal.cn/tags/break%E5%92%8Ccontinue/"/>
    
  </entry>
  
  <entry>
    <title>for循环语句</title>
    <link href="https://blog.vseal.cn/posts/7fad9216.html"/>
    <id>https://blog.vseal.cn/posts/7fad9216.html</id>
    <published>2019-12-30T15:32:50.000Z</published>
    <updated>2019-12-30T15:33:31.228Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-7-自然数求和&quot;&gt;&lt;a href=&quot;#任务3-7-自然数求和&quot; class=&quot;headerlink&quot; title=&quot;任务3-7 自然数求和&quot;&gt;&lt;/a&gt;任务3-7 自然数求和&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;一个变量存储循环控制变量，另外一个存储和的累加器；循环变量用i表示，则循环的3个要素：i=2;i&amp;lt;1000;i+=2，生成1000内的所有的偶数。每执行一次，生成一个新的偶数。累加器s须初始化为0.循环体是一条累加语句s+=i。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注微信公众号”blog_vseal_cn”回复37py3-7即可查看&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="for循环语句" scheme="https://blog.vseal.cn/tags/for%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>while循环</title>
    <link href="https://blog.vseal.cn/posts/54c85bed.html"/>
    <id>https://blog.vseal.cn/posts/54c85bed.html</id>
    <published>2019-12-28T05:02:23.000Z</published>
    <updated>2019-12-28T05:03:24.221Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-6-简单的计算器&quot;&gt;&lt;a href=&quot;#任务3-6-简单的计算器&quot; class=&quot;headerlink&quot; title=&quot;任务3-6 简单的计算器&quot;&gt;&lt;/a&gt;任务3-6 简单的计算器&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;根据题目要求，用一个字符串接收一个运算式(计算式)，需要用正则分解出两个操作数和一个运算符，再使用字典方式构造多分支结构，计算结果并输出。&lt;/li&gt;
&lt;li&gt;示例程序&lt;br&gt;关注微信公众号”&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;“回复37py3-6即可获取&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;循环语法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[初始化语句]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while (循环条件):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	语句块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[迭代语句]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果循环条件不成立，那么循环一次都不会执行&lt;/li&gt;
&lt;li&gt;如果迭代语句使得循环条件一直满足，那么就会&lt;strong&gt;死循环&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;但是有时候需要循环条件一直为True，不如GUI程序界面控制等。&lt;/li&gt;
&lt;li&gt;如果执行语句只有一条，那么可以跟着while冒号:后面&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="Python循环结构" scheme="https://blog.vseal.cn/tags/Python%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
      <category term="while循环" scheme="https://blog.vseal.cn/tags/while%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>switch语句的替换方案</title>
    <link href="https://blog.vseal.cn/posts/b0905f23.html"/>
    <id>https://blog.vseal.cn/posts/b0905f23.html</id>
    <published>2019-12-26T15:51:26.000Z</published>
    <updated>2019-12-26T15:52:11.429Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;任务3-5-判断三角形的类型&quot;&gt;&lt;a href=&quot;#任务3-5-判断三角形的类型&quot; class=&quot;headerlink&quot; title=&quot;任务3-5 判断三角形的类型&quot;&gt;&lt;/a&gt;任务3-5 判断三角形的类型&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;键入3条边长，根据边长关系，首先确定是个三角形，再根据勾股定理各两边平方和与第三条边的平方和关系，确定直角三角形，再锐角三角形，else钝角三角形。&lt;/li&gt;
&lt;li&gt;示例源码：&lt;br&gt;关注公众号’&lt;strong&gt;blog_vseal_cn&lt;/strong&gt;‘，回复37py3-5即可查看。&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;C语言或Java都支持switch语句，但是Python没有switch关键字，然后很多时候需要switch，那怎么办，推荐查看后面的&lt;strong&gt;字典章节&lt;/strong&gt;，再完成下面任务。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="switch语句的替换方案" scheme="https://blog.vseal.cn/tags/switch%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%9B%BF%E6%8D%A2%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>if语句的嵌套</title>
    <link href="https://blog.vseal.cn/posts/f2e4349a.html"/>
    <id>https://blog.vseal.cn/posts/f2e4349a.html</id>
    <published>2019-12-21T15:40:03.000Z</published>
    <updated>2019-12-21T15:41:19.462Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;任务3-4-成绩分等&quot;&gt;&lt;a href=&quot;#任务3-4-成绩分等&quot; class=&quot;headerlink&quot; title=&quot;任务3-4 成绩分等&quot;&gt;&lt;/a&gt;任务3-4 成绩分等&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;设计思路：&lt;br&gt;键盘输入数据，然后用if-elif-else判断成绩是否有效。&lt;/li&gt;
&lt;li&gt;示例程序：&lt;br&gt;关注微信公众号”hut-fsd“，回复37py3-4即可获取&lt;/li&gt;
&lt;/ul&gt;&lt;hr&gt;&lt;ul&gt;
&lt;li&gt;嵌套的基本格式：&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; 条件语句&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; 条件语句&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		执行语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		执行语句&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	执行语句&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;执行判断过程：&lt;/strong&gt;条件语句1 -&amp;gt;条件语句2 -&amp;gt;else 或 条件语句1 -&amp;gt; else:&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="if语句的嵌套" scheme="https://blog.vseal.cn/tags/if%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%B5%8C%E5%A5%97/"/>
    
  </entry>
  
  <entry>
    <title>if-elif-else判断语句</title>
    <link href="https://blog.vseal.cn/posts/25d1e216.html"/>
    <id>https://blog.vseal.cn/posts/25d1e216.html</id>
    <published>2019-11-22T15:41:42.000Z</published>
    <updated>2019-11-22T15:43:37.234Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-2-输出最大的数&quot;&gt;&lt;a href=&quot;#任务3-2-输出最大的数&quot; class=&quot;headerlink&quot; title=&quot;任务3-2 输出最大的数&quot;&gt;&lt;/a&gt;任务3-2 输出最大的数&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;设计思路：&lt;br&gt;分别定义3个变量来存放3个数。假如第一个变量是最大值，分别与第二个数和第三个数进行比较。如果发现逆序，则修改，最后输出答案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例程序：&lt;br&gt;关注微信公众号”&lt;strong&gt;hut-fsd&lt;/strong&gt;“，回复&lt;strong&gt;37py3-2&lt;/strong&gt;即可获取&lt;/p&gt;
&lt;h5 id=&quot;任务3-3-计算一元二次方程的根&quot;&gt;&lt;a href=&quot;#任务3-3-计算一元二次方程的根&quot; class=&quot;headerlink&quot; title=&quot;任务3-3 计算一元二次方程的根&quot;&gt;&lt;/a&gt;任务3-3 计算一元二次方程的根&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计思路：&lt;br&gt;根据公式$$x=\frac{-b\pm \sqrt{b^{2}-4ac}}{2a}$$可知需要3个输入量，a、b、c以及2个输出量保存方程的两根。当然需要注意a不能为0，平方根内值得必须大于等于0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例程序：&lt;br&gt;关注微信公众号”&lt;strong&gt;hut-fsd&lt;/strong&gt;“，回复&lt;strong&gt;37py3-3&lt;/strong&gt;即可获取&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="if-elif-else" scheme="https://blog.vseal.cn/tags/if-elif-else/"/>
    
  </entry>
  
  <entry>
    <title>Python 选择结构之if-else</title>
    <link href="https://blog.vseal.cn/posts/59920642.html"/>
    <id>https://blog.vseal.cn/posts/59920642.html</id>
    <published>2019-11-20T14:45:34.000Z</published>
    <updated>2019-11-20T14:46:58.250Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上篇回顾上篇回顾&quot;&gt;&lt;a href=&quot;#上篇回顾上篇回顾&quot; class=&quot;headerlink&quot; title=&quot;上篇回顾上篇回顾&quot;&gt;&lt;/a&gt;上篇回顾上篇回顾&lt;/h2&gt;&lt;h5 id=&quot;任务3-1-计算椭球的表面积和体积&quot;&gt;&lt;a href=&quot;#任务3-1-计算椭球的表面积和体积&quot; class=&quot;headerlink&quot; title=&quot;任务3-1 计算椭球的表面积和体积&quot;&gt;&lt;/a&gt;任务3-1 计算椭球的表面积和体积&lt;/h5&gt;&lt;p&gt;设计思路：根据椭球在xyz笛卡尔坐标系里面的方程：$$\frac{x^{2}}{a}+\frac{y^{2}}{b}+\frac{z^{2}}{c}=1$$。椭球体表面积公式：$$S=\frac{4}{3}ab\pi$$，再根据椭球体的体积公式：$$V=\frac{4}{3} \pi abc$$。设置输入的a、b、c，输出S和V即可。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python选择结构" scheme="https://blog.vseal.cn/tags/Python%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    
      <category term="Python流程处理" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E5%A4%84%E7%90%86/"/>
    
      <category term="if-else" scheme="https://blog.vseal.cn/tags/if-else/"/>
    
  </entry>
  
  <entry>
    <title>Python流程控制之顺序结构</title>
    <link href="https://blog.vseal.cn/posts/58ca4ef9.html"/>
    <id>https://blog.vseal.cn/posts/58ca4ef9.html</id>
    <published>2019-11-19T13:53:17.000Z</published>
    <updated>2019-11-19T13:54:38.301Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上篇回顾&quot;&gt;&lt;a href=&quot;#上篇回顾&quot; class=&quot;headerlink&quot; title=&quot;上篇回顾&quot;&gt;&lt;/a&gt;上篇回顾&lt;/h2&gt;&lt;h5 id=&quot;任务2-9-计算汽车贷款&quot;&gt;&lt;a href=&quot;#任务2-9-计算汽车贷款&quot; class=&quot;headerlink&quot; title=&quot;任务2-9 计算汽车贷款&quot;&gt;&lt;/a&gt;任务2-9 计算汽车贷款&lt;/h5&gt;&lt;p&gt;设计思路：根据之前所讲的math模块，自行推出计算式，然后求解。&lt;br&gt;演示源码：关注微信公众号”&lt;strong&gt;hut-fsd&lt;/strong&gt;“，回复&lt;strong&gt;37py2-9&lt;/strong&gt;即可查看~&lt;/p&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;p&gt;从这里开始我们步入第三章-Python流程控制，本节主讲顺序结构。&lt;/p&gt;&lt;p&gt;顺序结构：按照语句的先后顺序执行，每条语句只执行一次，简单吧，这个之前内容中已经实现了很多次咯，如果有所迷糊，看看之前的内容吧。&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python流程控制" scheme="https://blog.vseal.cn/tags/Python%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    
      <category term="Python顺序结构" scheme="https://blog.vseal.cn/tags/Python%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/"/>
    
      <category term="顺序结构" scheme="https://blog.vseal.cn/tags/%E9%A1%BA%E5%BA%8F%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Python-math模块</title>
    <link href="https://blog.vseal.cn/posts/98dbd912.html"/>
    <id>https://blog.vseal.cn/posts/98dbd912.html</id>
    <published>2019-11-17T10:20:31.000Z</published>
    <updated>2019-11-17T10:31:48.213Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;引入math模块&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import math&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常用数学函数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ceil:取大于等于x的最小的整数值，如果x是一个整数，则返回x&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;copysign:把y的正负号加到x前面，可以使用0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cos:求x的余弦，x必须是弧度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;degrees:把x从弧度转换成角度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;e:表示一个常量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;exp:返回math.e,也就是2.71828的x次方&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;expm1:返回math.e的x(其值为2.71828)次方的值减１&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fabs:返回x的绝对值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;factorial:取x的阶乘的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;floor:取小于等于x的最大的整数值，如果x是一个整数，则返回自身&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fmod:得到x/y的余数，其值是一个浮点数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;frexp:返回一个元组(m,e),其计算方式为：x分别除0.5和1,得到一个值的范围&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fsum:对迭代器里的每个元素进行求和操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gcd:返回x和y的最大公约数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hypot:如果x是不是无穷大的数字,则返回True,否则返回False&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isfinite:如果x是正无穷大或负无穷大，则返回True,否则返回False&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isinf:如果x是正无穷大或负无穷大，则返回True,否则返回False&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isnan:如果x不是数字True,否则返回False&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ldexp:返回x*(2**i)的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log:返回x的自然对数，默认以e为基数，base参数给定时，将x的对数返回给定的base,计算式为：log(x)/log(base)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log10:返回x的以10为底的对数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log1p:返回x+1的自然对数(基数为e)的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log2:返回x的基2对数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;modf:返回由x的小数部分和整数部分组成的元组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pi:数字常量，圆周率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pow:返回x的y次方，即x**y&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;radians:把角度x转换成弧度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sin:求x(x为弧度)的正弦值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sqrt:求x的平方根&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;tan:返回x(x为弧度)的正切值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;trunc:返回x的整数部分&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python数学模块" scheme="https://blog.vseal.cn/tags/Python%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9D%97/"/>
    
      <category term="math模块" scheme="https://blog.vseal.cn/tags/math%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>Python复数</title>
    <link href="https://blog.vseal.cn/posts/bebfcfa4.html"/>
    <id>https://blog.vseal.cn/posts/bebfcfa4.html</id>
    <published>2019-11-16T14:53:27.000Z</published>
    <updated>2019-11-16T14:54:27.203Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;内建函数库的complex()&lt;ol&gt;
&lt;li&gt;普通构造：&lt;code&gt;complex(2,3)&lt;/code&gt;；代表2+3j&lt;/li&gt;
&lt;li&gt;字符串构建：&lt;code&gt;complex(&amp;#39;2+3j&amp;#39;)&lt;/code&gt;；代表2+3j&lt;/li&gt;
&lt;li&gt;获
        
      
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python数学运算符之复数" scheme="https://blog.vseal.cn/tags/Python%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B9%8B%E5%A4%8D%E6%95%B0/"/>
    
      <category term="Python复数" scheme="https://blog.vseal.cn/tags/Python%E5%A4%8D%E6%95%B0/"/>
    
      <category term="复数" scheme="https://blog.vseal.cn/tags/%E5%A4%8D%E6%95%B0/"/>
    
      <category term="Python数学运算符" scheme="https://blog.vseal.cn/tags/Python%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python输出</title>
    <link href="https://blog.vseal.cn/posts/2d05461.html"/>
    <id>https://blog.vseal.cn/posts/2d05461.html</id>
    <published>2019-11-14T13:33:47.000Z</published>
    <updated>2019-11-15T15:38:41.742Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;本节内容：print()函数&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;简单玩法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;print(var1,var2)#直接输出变量&lt;/li&gt;
&lt;li&gt;print(“str”,var)#字符串后加变量&lt;/li&gt;
&lt;li&gt;print(“words %d %s “ %(num,str))#传说中的占位符&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;普通玩法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;语法格式：print(*objects,sep=’’,end=’\n’[,file=sys.stdout,flush=False])#括号[]内的参数很少使用&lt;/li&gt;
&lt;li&gt;参数说明：objects转为字符串的对象，然后写入file参数指定的文件，sys.stdout为标准输出;sep每个对象间分隔的参数，默认是空格；end为结尾参数，默认为换行。&lt;br&gt;1.有趣的示例：&lt;ol&gt;
&lt;li&gt;print(‘Hello’,’world!’,sep=’**‘) 输出 Hello**world&lt;/li&gt;
&lt;li&gt;print()默认输出后换行，不想换行可以print(end=’’)修改结尾参数&lt;/li&gt;
&lt;li&gt;使用转义字符控制输出格式如\t(8个空格的制表符) \n&lt;/li&gt;
&lt;li&gt;使用转义字符输出特殊字符，\，\’，\”等&lt;/li&gt;
&lt;li&gt;字符对齐：左对齐ljust(n)、右对齐rjust(n)和居中center(n),n为最大显示字符个数；如&lt;pre&gt;&lt;code&gt;str = &amp;quot;this is string example....wow!!!&amp;quot;;
print str.ljust(50);
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;zifill()函数0左填充&lt;pre&gt;&lt;code&gt;print str.zifill();
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python输出" scheme="https://blog.vseal.cn/tags/Python%E8%BE%93%E5%87%BA/"/>
    
      <category term="输出" scheme="https://blog.vseal.cn/tags/%E8%BE%93%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python输入</title>
    <link href="https://blog.vseal.cn/posts/bdee3b16.html"/>
    <id>https://blog.vseal.cn/posts/bdee3b16.html</id>
    <published>2019-11-13T15:38:33.000Z</published>
    <updated>2019-11-14T13:37:46.026Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;p&gt;函数input()&lt;br&gt;  语法格式：变量名 = input(“输入提示信息”)&lt;br&gt; 
        
      
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python输入" scheme="https://blog.vseal.cn/tags/Python%E8%BE%93%E5%85%A5/"/>
    
      <category term="输入" scheme="https://blog.vseal.cn/tags/%E8%BE%93%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Python成员运算符</title>
    <link href="https://blog.vseal.cn/posts/80ab09ee.html"/>
    <id>https://blog.vseal.cn/posts/80ab09ee.html</id>
    <published>2019-11-11T14:24:48.000Z</published>
    <updated>2019-11-11T14:32:46.112Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h5 id=&quot;in-和-not-in&quot;&gt;&lt;a href=&quot;#in-和-not-in&quot; class=&quot;headerlink&quot; title=&quot;in 和 not in&quot;&gt;&lt;/a&gt;in 和 not in&lt;/h5&gt;&lt;p&gt;in：在序列里面返回True，否者为False&lt;br&gt;not in
        
      
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python成员运算符" scheme="https://blog.vseal.cn/tags/Python%E6%88%90%E5%91%98%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
      <category term="成员运算符" scheme="https://blog.vseal.cn/tags/%E6%88%90%E5%91%98%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python位运算符</title>
    <link href="https://blog.vseal.cn/posts/8667cafb.html"/>
    <id>https://blog.vseal.cn/posts/8667cafb.html</id>
    <published>2019-11-10T13:07:49.000Z</published>
    <updated>2019-11-10T13:09:22.370Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;位运算的规则：&lt;strong&gt;把数字转为二进制后进行运算，运算结果转为原数字类型&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;Python的位运算符&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th
        
      
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python位运算符" scheme="https://blog.vseal.cn/tags/Python%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
      <category term="位运算符" scheme="https://blog.vseal.cn/tags/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python赋值运算符</title>
    <link href="https://blog.vseal.cn/posts/d136ea2c.html"/>
    <id>https://blog.vseal.cn/posts/d136ea2c.html</id>
    <published>2019-11-09T15:29:18.000Z</published>
    <updated>2019-11-30T01:34:38.815Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;上节内容&quot;&gt;&lt;a href=&quot;#上节内容&quot; class=&quot;headerlink&quot; title=&quot;上节内容&quot;&gt;&lt;/a&gt;上节内容&lt;/h2&gt;&lt;h6 id=&quot;任务2-5-闰年判断&quot;&gt;&lt;a href=&quot;#任务2-5-闰年判断&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python赋值运算符" scheme="https://blog.vseal.cn/tags/Python%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
      <category term="赋值运算符" scheme="https://blog.vseal.cn/tags/%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python关系运算符和逻辑运算符</title>
    <link href="https://blog.vseal.cn/posts/9696725b.html"/>
    <id>https://blog.vseal.cn/posts/9696725b.html</id>
    <published>2019-11-08T15:35:16.000Z</published>
    <updated>2019-11-08T15:38:20.430Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;上节任务&quot;&gt;&lt;a href=&quot;#上节任务&quot; class=&quot;headerlink&quot; title=&quot;上节任务&quot;&gt;&lt;/a&gt;上节任务&lt;/h2&gt;&lt;h5 id=&quot;任务2-4-计算圆锥体的体积和表面积&quot;&gt;&lt;a href=&quot;#任务2-4-计算圆锥体的体积和表面积&quot; class=&quot;headerlink&quot; title=&quot;任务2-4 计算圆锥体的体积和表面积&quot;&gt;&lt;/a&gt;任务2-4 计算圆锥体的体积和表面积&lt;/h5&gt;&lt;p&gt;设计思路：从键盘接受2个数据，底面半径、高，存入变量，再根据公式计算求解。&lt;br&gt;任务示例源码：关注微信公众号“湖工大风沙渡”回复&lt;strong&gt;37py2-4&lt;/strong&gt;即可免费观看。&lt;/p&gt;&lt;hr&gt;&lt;h2 id=&quot;本篇正文&quot;&gt;&lt;a href=&quot;#本篇正文&quot; class=&quot;headerlink&quot; title=&quot;本篇正文&quot;&gt;&lt;/a&gt;本篇正文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Python的关系运算符&lt;/li&gt;
&lt;/ul&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;运算符&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;操作&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;实例说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;==&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;等于&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2==2 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;!=&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;不等于&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5!=2 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&amp;lt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;小于&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2&amp;lt;5 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&amp;lt;=&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;小于或等于&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2&amp;lt;=2 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&amp;gt;&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;大于&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;5&amp;gt;2 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;&amp;gt;=&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;大于或等于&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;2&amp;gt;=2 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;is&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;判断两个标识符是否&lt;strong&gt;引用&lt;/strong&gt;同一对象&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;引用同一对象 True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;is not&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;判断两个标识符是否&lt;strong&gt;引用&lt;/strong&gt;不同对象&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;引用不同对象 True&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python关系运算符" scheme="https://blog.vseal.cn/tags/Python%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
      <category term="Python逻辑运算符" scheme="https://blog.vseal.cn/tags/Python%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
      <category term="关系运算符和逻辑运算符" scheme="https://blog.vseal.cn/tags/%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Python算术运算符及其表达式</title>
    <link href="https://blog.vseal.cn/posts/fa3ab1b6.html"/>
    <id>https://blog.vseal.cn/posts/fa3ab1b6.html</id>
    <published>2019-11-06T15:34:14.000Z</published>
    <updated>2019-11-06T15:36:51.506Z</updated>
    
    <summary type="html">
    
      &lt;h5 id=&quot;上期回顾&quot;&gt;&lt;a href=&quot;#上期回顾&quot; class=&quot;headerlink&quot; title=&quot;上期回顾&quot;&gt;&lt;/a&gt;上期回顾&lt;/h5&gt;&lt;h6 id=&quot;任务2-2-电子邮箱格式检测&quot;&gt;&lt;a href=&quot;#任务2-2-电子邮箱格式检测&quot; class=&quot;headerlink&quot; title=&quot;任务2-2 电子邮箱格式检测&quot;&gt;&lt;/a&gt;任务2-2 电子邮箱格式检测&lt;/h6&gt;&lt;p&gt;设计思路：用户从键盘输入邮箱，构造邮箱检测正则表达式，调用re.match()函数进行检测并且输出结果。&lt;br&gt;微信公众号”湖工大风沙渡”，回复”37py2-2”获取示例源码&lt;/p&gt;&lt;h6 id=&quot;任务2-3-电话号码检测&quot;&gt;&lt;a href=&quot;#任务2-3-电话号码检测&quot; class=&quot;headerlink&quot; title=&quot;任务2-3 电话号码检测&quot;&gt;&lt;/a&gt;任务2-3 电话号码检测&lt;/h6&gt;&lt;p&gt;设计思路：用户从键盘输入学生信息，先用正则表达式提取所有的数字，然后构造电话号码检测的正则表达式，调用match()函数进行检测并输出match().group()结果。&lt;br&gt;只考虑国内情况：固定电话区号是3或4位，以0开头；固定电话号码一般是7或8位数字；国内手机号码是11位数字，除了147号码段，其他的都只考虑前两位，例如1[35789]等。&lt;br&gt;微信公众号”湖工大风沙渡”，回复”37py2-3”获取示例源码&lt;/p&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python算术运算符" scheme="https://blog.vseal.cn/tags/Python%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    
      <category term="Python算术运算符表达式" scheme="https://blog.vseal.cn/tags/Python%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="算术运算符及其表达式" scheme="https://blog.vseal.cn/tags/%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%8A%E5%85%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python基本数据类型之变量 </title>
    <link href="https://blog.vseal.cn/posts/48bfbe8a.html"/>
    <id>https://blog.vseal.cn/posts/48bfbe8a.html</id>
    <published>2019-11-04T14:53:40.000Z</published>
    <updated>2019-11-04T14:55:37.066Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;变量特点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量不需要声明，但是&lt;strong&gt;必须赋值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;变量命名：（下划线或字母）+（任意数目字母、数字或下划线）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h5 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;变量不能以数字作为开头&lt;/li&gt;
&lt;li&gt;系统关键字不能作为变量名使用，如if,while等&lt;/li&gt;
&lt;li&gt;除了下划线其他字符不能使用&lt;/li&gt;
&lt;li&gt;变量区分大小写&lt;/li&gt;
&lt;li&gt;前后有下划线的变量名&lt;code&gt;_X_&lt;/code&gt;为系统变量&lt;/li&gt;
&lt;li&gt;变量是根据赋值所更改类型&lt;/li&gt;
&lt;li&gt;赋值方法&lt;ol&gt;
&lt;li&gt;普通赋值：y=1&lt;/li&gt;
&lt;li&gt;链式赋值：y=x=a=1&lt;/li&gt;
&lt;li&gt;多元赋值：x,y = 1,2 x,y=y,x&lt;/li&gt;
&lt;li&gt;增量赋值：x+=1&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python基本数据类型" scheme="https://blog.vseal.cn/tags/Python%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="变量" scheme="https://blog.vseal.cn/tags/%E5%8F%98%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python基本数据类型之字符串</title>
    <link href="https://blog.vseal.cn/posts/2f83f695.html"/>
    <id>https://blog.vseal.cn/posts/2f83f695.html</id>
    <published>2019-11-03T13:34:00.000Z</published>
    <updated>2019-11-03T13:35:43.254Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;常用” “或’ ‘或’’’ ‘’’括起来，同时使用反斜杠\转义特殊字符的一段文字。&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;注意&quot;&gt;&lt;a href=&quot;#注意&quot; class=&quot;headerlink&quot; title=&quot;注意&quot;&gt;&lt;/a&gt;注意&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;字符串前加r，反斜杠不转义；如&lt;code&gt;r&amp;#39;\t\n\u&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;连接字符串，str1 + str2。字符串重复 str1 * num 。&lt;/li&gt;
&lt;li&gt;续行符：\（后面不能有任何内容）；”””…”””或’’’…’’’续多行（没用过）&lt;/li&gt;
&lt;li&gt;字符串索引方式：从左为&lt;strong&gt;0&lt;/strong&gt;开始，从右边为&lt;strong&gt;-1&lt;/strong&gt;开始到&lt;strong&gt;-n&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;字符串切片：[头下标:尾下标:步数]，[开始，结束)，&lt;strong&gt;前闭后开&lt;/strong&gt;，步数不输入时，默认为1；例如&lt;code&gt;str =&amp;quot;abcdefg&amp;quot;&lt;/code&gt; ，可以切除&lt;strong&gt;“abc”&lt;/strong&gt;使用&lt;code&gt;str[0:3]&lt;/code&gt;、&lt;code&gt;str[0:3:1]&lt;/code&gt;，切出&lt;strong&gt;“cba”&lt;/strong&gt;使用&lt;code&gt;str[-5:-8]&lt;/code&gt;，切除&lt;strong&gt;“aceg”&lt;/strong&gt;使用&lt;code&gt;str[0:7:2]&lt;/code&gt;、&lt;code&gt;str[0::2]&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;字符串不能被改变：如word[0] = ‘m’&lt;strong&gt;会报错&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;find()函数：找子字符串，如str.find(sub_str)，找到为子字符串最左侧开始位置，找不到返回&lt;strong&gt;-1&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;lower()全小写化，str.lower();upper()全大写,str.upper()。&lt;/li&gt;
&lt;li&gt;replace()，替换字符，如str.replace(old,new)。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;常见转义字符&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python基本数据类型" scheme="https://blog.vseal.cn/tags/Python%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="字符串" scheme="https://blog.vseal.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>Python基本数据类型之数值</title>
    <link href="https://blog.vseal.cn/posts/322bc548.html"/>
    <id>https://blog.vseal.cn/posts/322bc548.html</id>
    <published>2019-11-02T15:41:00.000Z</published>
    <updated>2019-11-03T13:36:05.628Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Python 支持数据自定义根据变化数据类型，但是更改类型其存储空间会重新分配。&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;整型（int）Python3 整型可以做 long 类型使用。 1. 二进制：以 0b 开头。例如，0b11011 表示十进制的 27。 1. 八进制：以 0o 开头。例如，0o33 表示十进制的 27。 1. 十进制：正常显示。 1. 十六进制：以 0x 开头。例如，0x1b 表示十进制的 27。&lt;/li&gt;
&lt;li&gt;浮点型（float）&lt;br&gt;例如 2.7 或 2.7e2=2.7*100&lt;/li&gt;
&lt;li&gt;布尔型（bool）&lt;br&gt;0 为 Flase,其他常数为 True&lt;/li&gt;
&lt;li&gt;复数（complex）&lt;br&gt;复数由实数部分和虚数部分组成，可以用 a+bj 表示，也可以使用 complex(a,b);实数与虚数部分都为浮点。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Python基础教程" scheme="https://blog.vseal.cn/categories/Python%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Python基本数据类型" scheme="https://blog.vseal.cn/tags/Python%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
      <category term="字符串" scheme="https://blog.vseal.cn/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
</feed>
